{"version":3,"sources":["components/Clock/Clock.js","components/FormHello/FormHello.js","components/ListToDo/ListToDo.js","components/FormWelcome/FormWelcome.js","components/FormDefault.js","App.js","serviceWorker.js","index.js"],"names":["Clock","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","update","setState","time","Date","state","inherits","createClass","key","value","setInterval","h","getHours","m","getMinutes","react_default","a","createElement","className","Component","FormHello","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","continue","e","preventDefault","nextStep","_this$props","values","handleChange","components_Clock_Clock","type","placeholder","onChange","defaultValue","firstName","id","onClick","ListToDo","tasks","title","isDone","currentTarget","toConsumableArray","task","filter","t","forceUpdate","_this2","onKeyPress","createNewTask","bind","map","toogleTaskIsChecked","deleteTask","FormWelcome","sidebarOpen","onSetSidebarOpen","assertThisInitialized","open","react_sidebar_esm","sidebar","components_ListToDo_ListToDo","onSetOpen","styles","background","FormDefault","step","input","defineProperty","target","components_FormHello_FormHello","primary","components_FormWelcome_FormWelcome","App","components_FormDefault","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a0cac7b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./Clock.css\";\r\n\r\nexport class Clock extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t\t\r\n\t\tsuper(props)\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\ttime: new Date()\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\t\r\n\t\tsetInterval(this.update, 1000)\r\n\t\t\r\n\t}\r\n\t\r\n\tupdate = () => {\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\ttime: new Date()\r\n\t\t})\r\n\t\t\r\n\t};\r\n\t\r\n\trender() {\r\n\t\t\r\n\t\tconst h = this.state.time.getHours()\r\n\t\tconst m = this.state.time.getMinutes()\r\n\t\t\r\n\t\treturn (\r\n\t\t\r\n\t\t\t<div className=\"clock\">{h}:{(m < 10 ? '0' + m : m)}</div>\r\n\t\t\r\n\t\t)\r\n\t\t\r\n\t}\r\n\t\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Clock;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Clock from '../Clock/Clock';\r\nimport \"./FormHello.css\";\r\n\r\n\r\nexport class FormHello extends Component{\r\n\tcontinue = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.nextStep();\r\n\t}\r\n\trender() {\r\n\t\tconst { values, handleChange } = this.props;\r\n\t\treturn (\r\n\r\n\t\t\t\t<div className=\"main\">\r\n\t\t\t\t\t<h1><Clock /></h1>\r\n\t\t\t\t\t<div className=\"main-information\">\r\n\t\t\t\t\t\t<h2>Hello,what's your name:</h2>\r\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Enter your name\" \r\n\t\t\t\t\t\tonChange={handleChange('firstName')} defaultValue={values.firstName} id=\"standard-textarea\" />\r\n\t\t\t\t\t\t<button onClick={this.continue} className=\"btn btn-primary\" type=\"submit\" >Confirm</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default FormHello;\r\n","import React, { Component } from \"react\";\r\nimport \"./ListToDo.css\";\r\n\r\n\r\nexport class ListToDo extends Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\ttasks: \r\n\t\t\t[\t{  title:'buy potatoes', isDone: false},\r\n\t\t\t\t{  title:'call a friend', isDone: false} ]\r\n\t\t};\r\n\r\n\t}\r\n\r\n\r\n\r\ncreateNewTask(e){\r\n\r\n\tif (e.key === 'Enter' && e.currentTarget.value !== '') {\r\n\t\tthis.setState({\r\n\t\t\ttasks: [...this.state.tasks, { title: e.currentTarget.value, isDone: false}]\r\n\t\t});\r\n\t\te.currentTarget.value = '';\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\ndeleteTask(task, e){\r\n\tthis.setState({\r\n\t\ttasks: this.state.tasks.filter((t) => {\r\n\t\t\treturn t !== task;\r\n\t\t})\r\n\t});\r\n}\r\n\r\n\r\n\r\n\r\ntoogleTaskIsChecked(task, e){\r\n\ttask.isDone = !task.isDone;\r\n\tthis.forceUpdate();\r\n}\r\nrender() {\r\n\treturn (\r\n\t\t<div className=\"todolist\">\r\n\t\t\t<div className=\"title\">\r\n\t\t\t<h3>Todos</h3></div>\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<input onKeyPress={this.createNewTask.bind(this)} className=\"input-todo\"/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"tasks\">\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.state.tasks.map((task) => {\r\n\t\t\t\t\t\treturn <div key={task.title} className={ task.isDone ? 'task done' : 'task'}>\r\n\t\t\t\t\t\t<input type=\"checkbox\" onClick={this.toogleTaskIsChecked.bind(this,task)}className=\"input-checked-task\"/>\r\n\t\t\t\t\t\t{task.title} \r\n\t\t\t\t\t\t<span className=\"delete\" onClick={this.deleteTask.bind(this,task)}>x</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t); \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\t\r\n}\r\nexport default ListToDo;","import React, { Component } from 'react';\r\nimport Clock from '../Clock/Clock';\r\nimport ListToDo from '../ListToDo/ListToDo';\r\nimport \"./FormWelcome.css\";\r\nimport Sidebar from \"react-sidebar\";\r\n\r\n\r\nexport class FormWelcome extends Component{\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sidebarOpen: true\r\n    };\r\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\r\n  }\r\n\r\n  onSetSidebarOpen(open) {\r\n    this.setState({ sidebarOpen: open });\r\n  }\r\n\r\n\trender() {\r\n    const {\r\n      values: { firstName }\r\n    } = this.props;\r\n\t\treturn (\r\n\t\t\t<div className=\"wrapper\">\r\n\t\t\t<Sidebar\r\n\t\t\tsidebar={ <ListToDo /> }\r\n\t\t\t\r\n\t\t\topen={this.state.sidebarOpen}\r\n\t\t\tonSetOpen={this.onSetSidebarOpen}\r\n\t\t\tstyles={{ sidebar: { background: \"white\" } }}>\r\n\t\t\t<button className=\"btn btn-primary\" type=\"submit\" onClick={() => this.onSetSidebarOpen(true)}>\r\n\t\t\tTodos</button>\r\n\t\t</Sidebar>\r\n\t\t<h1><Clock/></h1>\r\n\t\t<div className=\"hello-title\">\r\n\t\t\t\t\t\t\t<h2>Hello,</h2>\r\n\t\t\t\t\t\t\t<h2>{firstName}</h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n}\t\t\r\n\r\n\r\n\r\n\r\n\r\nexport default FormWelcome;\r\n","import React, { Component} from 'react';\r\nimport FormHello from './FormHello/FormHello';\r\nimport FormWelcome from './FormWelcome/FormWelcome'\r\n\r\nexport class FormDefault extends Component{\r\n\tstate = {\r\n\t\tstep: 1,\r\n\t\tfirstName: ''\r\n\t}\r\n\r\n\r\nnextStep = () =>{\r\n\tconst { step } =this.state;\r\n\tthis.setState({\r\n\t\tstep: step + 1\r\n\t});\r\n};\r\n\r\nhandleChange = input => e =>{\r\n\tthis.setState({[input]: e.target.value});\r\n}\r\n\r\n\r\n\trender() {\r\n\t\tconst { step } = this.state;\r\n\t\tconst { firstName } = this.state;\r\n\t\tconst values = { firstName }\r\n\r\n\t\tswitch(step) {\r\n\t\t\tcase 1:\r\n\t\t\treturn (\r\n\t\t\t\t<FormHello \r\n\t\t\t\tnextStep={this.nextStep}\r\n\t\t\t\thandleChange={this.handleChange}\r\n\t\t\t\tvalues={values}\r\n\t\t\t\tprimary=\"true\"\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t\tcase 2:\r\n\t\t\treturn (\r\n\t\t\t<FormWelcome \r\n\t\t\tvalues={values}\r\n\t\t\t/>\r\n\t\t\t)\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default FormDefault;","import React, { Component } from 'react';\nimport './App.css';\nimport FormDefault from './components/FormDefault';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n\t\t\t\t<FormDefault />\n\t\t\t\t\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}